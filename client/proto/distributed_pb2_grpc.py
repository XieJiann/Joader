# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import distributed_pb2 as distributed__pb2


class DistributedSvcStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateSampler = channel.unary_unary(
                '/distributed.DistributedSvc/CreateSampler',
                request_serializer=distributed__pb2.CreateSamplerRequest.SerializeToString,
                response_deserializer=distributed__pb2.CreateSamplerResponse.FromString,
                )
        self.DeleteSampler = channel.unary_unary(
                '/distributed.DistributedSvc/DeleteSampler',
                request_serializer=distributed__pb2.DeleteSamplerRequest.SerializeToString,
                response_deserializer=distributed__pb2.DeleteSamplerResponse.FromString,
                )
        self.QueryHost = channel.unary_unary(
                '/distributed.DistributedSvc/QueryHost',
                request_serializer=distributed__pb2.QueryHostRequest.SerializeToString,
                response_deserializer=distributed__pb2.QueryHostResponse.FromString,
                )
        self.Sample = channel.unary_unary(
                '/distributed.DistributedSvc/Sample',
                request_serializer=distributed__pb2.SampleRequest.SerializeToString,
                response_deserializer=distributed__pb2.SampleResponse.FromString,
                )
        self.RegisterHost = channel.unary_unary(
                '/distributed.DistributedSvc/RegisterHost',
                request_serializer=distributed__pb2.RegisterHostRequest.SerializeToString,
                response_deserializer=distributed__pb2.RegisterHostResponse.FromString,
                )
        self.DeleteHost = channel.unary_unary(
                '/distributed.DistributedSvc/DeleteHost',
                request_serializer=distributed__pb2.DeleteHostRequest.SerializeToString,
                response_deserializer=distributed__pb2.DeleteHostResponse.FromString,
                )
        self.RegisterDataset = channel.unary_unary(
                '/distributed.DistributedSvc/RegisterDataset',
                request_serializer=distributed__pb2.RegisterDatasetRequest.SerializeToString,
                response_deserializer=distributed__pb2.RegisterDatasetResponse.FromString,
                )


class DistributedSvcServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateSampler(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteSampler(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryHost(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Sample(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterHost(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteHost(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterDataset(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DistributedSvcServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateSampler': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateSampler,
                    request_deserializer=distributed__pb2.CreateSamplerRequest.FromString,
                    response_serializer=distributed__pb2.CreateSamplerResponse.SerializeToString,
            ),
            'DeleteSampler': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteSampler,
                    request_deserializer=distributed__pb2.DeleteSamplerRequest.FromString,
                    response_serializer=distributed__pb2.DeleteSamplerResponse.SerializeToString,
            ),
            'QueryHost': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryHost,
                    request_deserializer=distributed__pb2.QueryHostRequest.FromString,
                    response_serializer=distributed__pb2.QueryHostResponse.SerializeToString,
            ),
            'Sample': grpc.unary_unary_rpc_method_handler(
                    servicer.Sample,
                    request_deserializer=distributed__pb2.SampleRequest.FromString,
                    response_serializer=distributed__pb2.SampleResponse.SerializeToString,
            ),
            'RegisterHost': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterHost,
                    request_deserializer=distributed__pb2.RegisterHostRequest.FromString,
                    response_serializer=distributed__pb2.RegisterHostResponse.SerializeToString,
            ),
            'DeleteHost': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteHost,
                    request_deserializer=distributed__pb2.DeleteHostRequest.FromString,
                    response_serializer=distributed__pb2.DeleteHostResponse.SerializeToString,
            ),
            'RegisterDataset': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterDataset,
                    request_deserializer=distributed__pb2.RegisterDatasetRequest.FromString,
                    response_serializer=distributed__pb2.RegisterDatasetResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'distributed.DistributedSvc', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DistributedSvc(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateSampler(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/distributed.DistributedSvc/CreateSampler',
            distributed__pb2.CreateSamplerRequest.SerializeToString,
            distributed__pb2.CreateSamplerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteSampler(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/distributed.DistributedSvc/DeleteSampler',
            distributed__pb2.DeleteSamplerRequest.SerializeToString,
            distributed__pb2.DeleteSamplerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryHost(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/distributed.DistributedSvc/QueryHost',
            distributed__pb2.QueryHostRequest.SerializeToString,
            distributed__pb2.QueryHostResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Sample(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/distributed.DistributedSvc/Sample',
            distributed__pb2.SampleRequest.SerializeToString,
            distributed__pb2.SampleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RegisterHost(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/distributed.DistributedSvc/RegisterHost',
            distributed__pb2.RegisterHostRequest.SerializeToString,
            distributed__pb2.RegisterHostResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteHost(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/distributed.DistributedSvc/DeleteHost',
            distributed__pb2.DeleteHostRequest.SerializeToString,
            distributed__pb2.DeleteHostResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RegisterDataset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/distributed.DistributedSvc/RegisterDataset',
            distributed__pb2.RegisterDatasetRequest.SerializeToString,
            distributed__pb2.RegisterDatasetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
